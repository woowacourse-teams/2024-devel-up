name: FRONT_CI

on:
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches: [ 'main' ]
    paths:
      - frontend/**

env:
  lilychoibb: "U07AQJWU8S3"
  robinjoon: "U07BU02FQFJ"
  brgndyy: "U07B53DM02W"
  chosim-dvlpr: "U07BHP5UTLH"
  Minjoo522: "U07B4V80WLT"
  alstn113: "U07AQK2KBLP"
  le2sky: "U07B26581CM"
  Parkhanyoung: "U07BTSGKCC8"

jobs:
  FE_CI:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write

    outputs:
      lint: ${{ steps.npm_run_lint_result.outputs.result }}
      build: ${{ steps.npm_run_build_result.outputs.result }}
      test: ${{ steps.npm_run_test_result.outputs.result }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.15.1'

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Run lint
        continue-on-error: true
        id: npm_run_lint
        run: |
          cd frontend
          npm run lint

      - name: Save Run lint result
        continue-on-error: true
        id: npm_run_lint_result
        run: |
          echo "result=${{steps.npm_run_lint.outcome}}" >> $GITHUB_OUTPUT

      - name: Run build
        continue-on-error: true
        id: npm_run_build
        run: |
          pwd
          cd frontend
          npm run build

      - name: Save Run build result
        continue-on-error: true
        id: npm_run_build_result
        run: |
          echo "result=${{steps.npm_run_build.outcome}}" >> $GITHUB_OUTPUT

      - name: Run test
        continue-on-error: true
        id: npm_run_test
        run: |
          cd frontend
          npm run test

      - name: Save Run test result
        continue-on-error: true
        id: npm_run_test_result
        run: |
          echo "result=${{steps.npm_run_test.outcome}}" >> $GITHUB_OUTPUT

  FE_SLACK_MESSAGE:
    runs-on: ubuntu-latest
    needs: FE_CI
    if: ${{needs.FE_CI.result != 'skipped'}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Get teamMember
        id: teamMember
        run: |
          echo "SENDER_SLACK_ID=${{ env[github.event.sender.login] }}" >> $GITHUB_ENV

      - name: Slack mention
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.ISSUE_CHANNEL }}
          payload: |
            {
                "text": "pr 테스트 결과",
                "blocks": [
                  {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "pr 테스트 결과\n lint : ${{ needs.FE_CI.outputs.lint }} \n build : ${{ needs.FE_CI.outputs.build }} \n test : ${{ needs.FE_CI.outputs.test }} \n • 링크: <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}> \n • pr 담당자: <@${{ env.SENDER_SLACK_ID }}>"
                      }
                  }
                ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
